#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SellerEngine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SellerEngine")]
	public partial class AutoSellerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRootUser(RootUser instance);
    partial void UpdateRootUser(RootUser instance);
    partial void DeleteRootUser(RootUser instance);
    partial void InsertCloudDoc(CloudDoc instance);
    partial void UpdateCloudDoc(CloudDoc instance);
    partial void DeleteCloudDoc(CloudDoc instance);
    partial void InsertAdvertModule(AdvertModule instance);
    partial void UpdateAdvertModule(AdvertModule instance);
    partial void DeleteAdvertModule(AdvertModule instance);
    partial void InsertModuleWise(ModuleWise instance);
    partial void UpdateModuleWise(ModuleWise instance);
    partial void DeleteModuleWise(ModuleWise instance);
    partial void InsertEntityCredential(EntityCredential instance);
    partial void UpdateEntityCredential(EntityCredential instance);
    partial void DeleteEntityCredential(EntityCredential instance);
    partial void InsertFBGorup(FBGorup instance);
    partial void UpdateFBGorup(FBGorup instance);
    partial void DeleteFBGorup(FBGorup instance);
    #endregion
		
		public AutoSellerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SellerEngineConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AutoSellerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoSellerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoSellerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AutoSellerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RootUser> RootUsers
		{
			get
			{
				return this.GetTable<RootUser>();
			}
		}
		
		public System.Data.Linq.Table<CloudDoc> CloudDocs
		{
			get
			{
				return this.GetTable<CloudDoc>();
			}
		}
		
		public System.Data.Linq.Table<AdvertModule> AdvertModules
		{
			get
			{
				return this.GetTable<AdvertModule>();
			}
		}
		
		public System.Data.Linq.Table<ModuleWise> ModuleWises
		{
			get
			{
				return this.GetTable<ModuleWise>();
			}
		}
		
		public System.Data.Linq.Table<EntityCredential> EntityCredentials
		{
			get
			{
				return this.GetTable<EntityCredential>();
			}
		}
		
		public System.Data.Linq.Table<FBGorup> FBGorups
		{
			get
			{
				return this.GetTable<FBGorup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RootUser")]
	public partial class RootUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NickName;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<EntityCredential> _EntityCredentials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public RootUser()
		{
			this._EntityCredentials = new EntitySet<EntityCredential>(new Action<EntityCredential>(this.attach_EntityCredentials), new Action<EntityCredential>(this.detach_EntityCredentials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RootUser_EntityCredential", Storage="_EntityCredentials", ThisKey="Id", OtherKey="RootId")]
		public EntitySet<EntityCredential> EntityCredentials
		{
			get
			{
				return this._EntityCredentials;
			}
			set
			{
				this._EntityCredentials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityCredentials(EntityCredential entity)
		{
			this.SendPropertyChanging();
			entity.RootUser = this;
		}
		
		private void detach_EntityCredentials(EntityCredential entity)
		{
			this.SendPropertyChanging();
			entity.RootUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CloudDoc")]
	public partial class CloudDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _PublicId;
		
		private string _Url;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPublicIdChanging(string value);
    partial void OnPublicIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public CloudDoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicId", DbType="NVarChar(50)")]
		public string PublicId
		{
			get
			{
				return this._PublicId;
			}
			set
			{
				if ((this._PublicId != value))
				{
					this.OnPublicIdChanging(value);
					this.SendPropertyChanging();
					this._PublicId = value;
					this.SendPropertyChanged("PublicId");
					this.OnPublicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvertModule")]
	public partial class AdvertModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CredId;
		
		private string _EntityName;
		
		private string _Title;
		
		private string _Summary;
		
		private System.Nullable<int> _Price;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private string _AdvertId;
		
		private string _Status;
		
		private string _Preference;
		
		private bool _AirCond;
		
		private bool _CookingAllowed;
		
		private bool _Internet;
		
		private bool _NearKTM;
		
		private string _PicUrl;
		
		private string _EntityUrl;
		
		private EntitySet<ModuleWise> _ModuleWises;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCredIdChanging(System.Nullable<long> value);
    partial void OnCredIdChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnAdvertIdChanging(string value);
    partial void OnAdvertIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPreferenceChanging(string value);
    partial void OnPreferenceChanged();
    partial void OnAirCondChanging(bool value);
    partial void OnAirCondChanged();
    partial void OnCookingAllowedChanging(bool value);
    partial void OnCookingAllowedChanged();
    partial void OnInternetChanging(bool value);
    partial void OnInternetChanged();
    partial void OnNearKTMChanging(bool value);
    partial void OnNearKTMChanged();
    partial void OnPicUrlChanging(string value);
    partial void OnPicUrlChanged();
    partial void OnEntityUrlChanging(string value);
    partial void OnEntityUrlChanged();
    #endregion
		
		public AdvertModule()
		{
			this._ModuleWises = new EntitySet<ModuleWise>(new Action<ModuleWise>(this.attach_ModuleWises), new Action<ModuleWise>(this.detach_ModuleWises));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CredId", DbType="BigInt")]
		public System.Nullable<long> CredId
		{
			get
			{
				return this._CredId;
			}
			set
			{
				if ((this._CredId != value))
				{
					this.OnCredIdChanging(value);
					this.SendPropertyChanging();
					this._CredId = value;
					this.SendPropertyChanged("CredId");
					this.OnCredIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(50)")]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertId", DbType="NVarChar(50)")]
		public string AdvertId
		{
			get
			{
				return this._AdvertId;
			}
			set
			{
				if ((this._AdvertId != value))
				{
					this.OnAdvertIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertId = value;
					this.SendPropertyChanged("AdvertId");
					this.OnAdvertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(500)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preference", DbType="NVarChar(50)")]
		public string Preference
		{
			get
			{
				return this._Preference;
			}
			set
			{
				if ((this._Preference != value))
				{
					this.OnPreferenceChanging(value);
					this.SendPropertyChanging();
					this._Preference = value;
					this.SendPropertyChanged("Preference");
					this.OnPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirCond", DbType="Bit NOT NULL")]
		public bool AirCond
		{
			get
			{
				return this._AirCond;
			}
			set
			{
				if ((this._AirCond != value))
				{
					this.OnAirCondChanging(value);
					this.SendPropertyChanging();
					this._AirCond = value;
					this.SendPropertyChanged("AirCond");
					this.OnAirCondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CookingAllowed", DbType="Bit NOT NULL")]
		public bool CookingAllowed
		{
			get
			{
				return this._CookingAllowed;
			}
			set
			{
				if ((this._CookingAllowed != value))
				{
					this.OnCookingAllowedChanging(value);
					this.SendPropertyChanging();
					this._CookingAllowed = value;
					this.SendPropertyChanged("CookingAllowed");
					this.OnCookingAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internet", DbType="Bit NOT NULL")]
		public bool Internet
		{
			get
			{
				return this._Internet;
			}
			set
			{
				if ((this._Internet != value))
				{
					this.OnInternetChanging(value);
					this.SendPropertyChanging();
					this._Internet = value;
					this.SendPropertyChanged("Internet");
					this.OnInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearKTM", DbType="Bit NOT NULL")]
		public bool NearKTM
		{
			get
			{
				return this._NearKTM;
			}
			set
			{
				if ((this._NearKTM != value))
				{
					this.OnNearKTMChanging(value);
					this.SendPropertyChanging();
					this._NearKTM = value;
					this.SendPropertyChanged("NearKTM");
					this.OnNearKTMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicUrl", DbType="NVarChar(MAX)")]
		public string PicUrl
		{
			get
			{
				return this._PicUrl;
			}
			set
			{
				if ((this._PicUrl != value))
				{
					this.OnPicUrlChanging(value);
					this.SendPropertyChanging();
					this._PicUrl = value;
					this.SendPropertyChanged("PicUrl");
					this.OnPicUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityUrl", DbType="NVarChar(800)")]
		public string EntityUrl
		{
			get
			{
				return this._EntityUrl;
			}
			set
			{
				if ((this._EntityUrl != value))
				{
					this.OnEntityUrlChanging(value);
					this.SendPropertyChanging();
					this._EntityUrl = value;
					this.SendPropertyChanged("EntityUrl");
					this.OnEntityUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvertModule_ModuleWise", Storage="_ModuleWises", ThisKey="Id", OtherKey="AdvertId")]
		public EntitySet<ModuleWise> ModuleWises
		{
			get
			{
				return this._ModuleWises;
			}
			set
			{
				this._ModuleWises.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModuleWises(ModuleWise entity)
		{
			this.SendPropertyChanging();
			entity.AdvertModule = this;
		}
		
		private void detach_ModuleWises(ModuleWise entity)
		{
			this.SendPropertyChanging();
			entity.AdvertModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleWise")]
	public partial class ModuleWise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AdvertId;
		
		private string _ModuleName;
		
		private string _ModuleId;
		
		private string _ModuleUrl;
		
		private string _ResponseId;
		
		private long _CredId;
		
		private EntityRef<AdvertModule> _AdvertModule;
		
		private EntityRef<EntityCredential> _EntityCredential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAdvertIdChanging(long value);
    partial void OnAdvertIdChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnModuleIdChanging(string value);
    partial void OnModuleIdChanged();
    partial void OnModuleUrlChanging(string value);
    partial void OnModuleUrlChanged();
    partial void OnResponseIdChanging(string value);
    partial void OnResponseIdChanged();
    partial void OnCredIdChanging(long value);
    partial void OnCredIdChanged();
    #endregion
		
		public ModuleWise()
		{
			this._AdvertModule = default(EntityRef<AdvertModule>);
			this._EntityCredential = default(EntityRef<EntityCredential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertId", DbType="BigInt NOT NULL")]
		public long AdvertId
		{
			get
			{
				return this._AdvertId;
			}
			set
			{
				if ((this._AdvertId != value))
				{
					if (this._AdvertModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertId = value;
					this.SendPropertyChanged("AdvertId");
					this.OnAdvertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(50)")]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="NVarChar(500)")]
		public string ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleUrl", DbType="NVarChar(MAX)")]
		public string ModuleUrl
		{
			get
			{
				return this._ModuleUrl;
			}
			set
			{
				if ((this._ModuleUrl != value))
				{
					this.OnModuleUrlChanging(value);
					this.SendPropertyChanging();
					this._ModuleUrl = value;
					this.SendPropertyChanged("ModuleUrl");
					this.OnModuleUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseId", DbType="NVarChar(500)")]
		public string ResponseId
		{
			get
			{
				return this._ResponseId;
			}
			set
			{
				if ((this._ResponseId != value))
				{
					this.OnResponseIdChanging(value);
					this.SendPropertyChanging();
					this._ResponseId = value;
					this.SendPropertyChanged("ResponseId");
					this.OnResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CredId", DbType="BigInt NOT NULL")]
		public long CredId
		{
			get
			{
				return this._CredId;
			}
			set
			{
				if ((this._CredId != value))
				{
					if (this._EntityCredential.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCredIdChanging(value);
					this.SendPropertyChanging();
					this._CredId = value;
					this.SendPropertyChanged("CredId");
					this.OnCredIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvertModule_ModuleWise", Storage="_AdvertModule", ThisKey="AdvertId", OtherKey="Id", IsForeignKey=true)]
		public AdvertModule AdvertModule
		{
			get
			{
				return this._AdvertModule.Entity;
			}
			set
			{
				AdvertModule previousValue = this._AdvertModule.Entity;
				if (((previousValue != value) 
							|| (this._AdvertModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdvertModule.Entity = null;
						previousValue.ModuleWises.Remove(this);
					}
					this._AdvertModule.Entity = value;
					if ((value != null))
					{
						value.ModuleWises.Add(this);
						this._AdvertId = value.Id;
					}
					else
					{
						this._AdvertId = default(long);
					}
					this.SendPropertyChanged("AdvertModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityCredential_ModuleWise", Storage="_EntityCredential", ThisKey="CredId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public EntityCredential EntityCredential
		{
			get
			{
				return this._EntityCredential.Entity;
			}
			set
			{
				EntityCredential previousValue = this._EntityCredential.Entity;
				if (((previousValue != value) 
							|| (this._EntityCredential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityCredential.Entity = null;
						previousValue.ModuleWises.Remove(this);
					}
					this._EntityCredential.Entity = value;
					if ((value != null))
					{
						value.ModuleWises.Add(this);
						this._CredId = value.Id;
					}
					else
					{
						this._CredId = default(long);
					}
					this.SendPropertyChanged("EntityCredential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityCredential")]
	public partial class EntityCredential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _EntityName;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private string _NickName;
		
		private string _AuthToken;
		
		private string _EntityUserId;
		
		private System.Nullable<long> _RootId;
		
		private System.Nullable<System.DateTime> _ExpiredAt;
		
		private EntitySet<ModuleWise> _ModuleWises;
		
		private EntitySet<FBGorup> _FBGorups;
		
		private EntityRef<RootUser> _RootUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnAuthTokenChanging(string value);
    partial void OnAuthTokenChanged();
    partial void OnEntityUserIdChanging(string value);
    partial void OnEntityUserIdChanged();
    partial void OnRootIdChanging(System.Nullable<long> value);
    partial void OnRootIdChanged();
    partial void OnExpiredAtChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredAtChanged();
    #endregion
		
		public EntityCredential()
		{
			this._ModuleWises = new EntitySet<ModuleWise>(new Action<ModuleWise>(this.attach_ModuleWises), new Action<ModuleWise>(this.detach_ModuleWises));
			this._FBGorups = new EntitySet<FBGorup>(new Action<FBGorup>(this.attach_FBGorups), new Action<FBGorup>(this.detach_FBGorups));
			this._RootUser = default(EntityRef<RootUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(50)")]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(500)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(200)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthToken", DbType="NVarChar(MAX)")]
		public string AuthToken
		{
			get
			{
				return this._AuthToken;
			}
			set
			{
				if ((this._AuthToken != value))
				{
					this.OnAuthTokenChanging(value);
					this.SendPropertyChanging();
					this._AuthToken = value;
					this.SendPropertyChanged("AuthToken");
					this.OnAuthTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityUserId", DbType="NVarChar(500)")]
		public string EntityUserId
		{
			get
			{
				return this._EntityUserId;
			}
			set
			{
				if ((this._EntityUserId != value))
				{
					this.OnEntityUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntityUserId = value;
					this.SendPropertyChanged("EntityUserId");
					this.OnEntityUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootId", DbType="BigInt")]
		public System.Nullable<long> RootId
		{
			get
			{
				return this._RootId;
			}
			set
			{
				if ((this._RootId != value))
				{
					if (this._RootUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRootIdChanging(value);
					this.SendPropertyChanging();
					this._RootId = value;
					this.SendPropertyChanged("RootId");
					this.OnRootIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredAt
		{
			get
			{
				return this._ExpiredAt;
			}
			set
			{
				if ((this._ExpiredAt != value))
				{
					this.OnExpiredAtChanging(value);
					this.SendPropertyChanging();
					this._ExpiredAt = value;
					this.SendPropertyChanged("ExpiredAt");
					this.OnExpiredAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityCredential_ModuleWise", Storage="_ModuleWises", ThisKey="Id", OtherKey="CredId")]
		public EntitySet<ModuleWise> ModuleWises
		{
			get
			{
				return this._ModuleWises;
			}
			set
			{
				this._ModuleWises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityCredential_FBGorup", Storage="_FBGorups", ThisKey="Id", OtherKey="CredId")]
		public EntitySet<FBGorup> FBGorups
		{
			get
			{
				return this._FBGorups;
			}
			set
			{
				this._FBGorups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RootUser_EntityCredential", Storage="_RootUser", ThisKey="RootId", OtherKey="Id", IsForeignKey=true)]
		public RootUser RootUser
		{
			get
			{
				return this._RootUser.Entity;
			}
			set
			{
				RootUser previousValue = this._RootUser.Entity;
				if (((previousValue != value) 
							|| (this._RootUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RootUser.Entity = null;
						previousValue.EntityCredentials.Remove(this);
					}
					this._RootUser.Entity = value;
					if ((value != null))
					{
						value.EntityCredentials.Add(this);
						this._RootId = value.Id;
					}
					else
					{
						this._RootId = default(Nullable<long>);
					}
					this.SendPropertyChanged("RootUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModuleWises(ModuleWise entity)
		{
			this.SendPropertyChanging();
			entity.EntityCredential = this;
		}
		
		private void detach_ModuleWises(ModuleWise entity)
		{
			this.SendPropertyChanging();
			entity.EntityCredential = null;
		}
		
		private void attach_FBGorups(FBGorup entity)
		{
			this.SendPropertyChanging();
			entity.EntityCredential = this;
		}
		
		private void detach_FBGorups(FBGorup entity)
		{
			this.SendPropertyChanging();
			entity.EntityCredential = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FBGorup")]
	public partial class FBGorup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _GroupId;
		
		private string _GroupTitle;
		
		private long _CredId;
		
		private EntityRef<EntityCredential> _EntityCredential;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    partial void OnGroupTitleChanging(string value);
    partial void OnGroupTitleChanged();
    partial void OnCredIdChanging(long value);
    partial void OnCredIdChanged();
    #endregion
		
		public FBGorup()
		{
			this._EntityCredential = default(EntityRef<EntityCredential>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(500)")]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupTitle", DbType="NVarChar(800)")]
		public string GroupTitle
		{
			get
			{
				return this._GroupTitle;
			}
			set
			{
				if ((this._GroupTitle != value))
				{
					this.OnGroupTitleChanging(value);
					this.SendPropertyChanging();
					this._GroupTitle = value;
					this.SendPropertyChanged("GroupTitle");
					this.OnGroupTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CredId", DbType="BigInt NOT NULL")]
		public long CredId
		{
			get
			{
				return this._CredId;
			}
			set
			{
				if ((this._CredId != value))
				{
					if (this._EntityCredential.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCredIdChanging(value);
					this.SendPropertyChanging();
					this._CredId = value;
					this.SendPropertyChanged("CredId");
					this.OnCredIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityCredential_FBGorup", Storage="_EntityCredential", ThisKey="CredId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EntityCredential EntityCredential
		{
			get
			{
				return this._EntityCredential.Entity;
			}
			set
			{
				EntityCredential previousValue = this._EntityCredential.Entity;
				if (((previousValue != value) 
							|| (this._EntityCredential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityCredential.Entity = null;
						previousValue.FBGorups.Remove(this);
					}
					this._EntityCredential.Entity = value;
					if ((value != null))
					{
						value.FBGorups.Add(this);
						this._CredId = value.Id;
					}
					else
					{
						this._CredId = default(long);
					}
					this.SendPropertyChanged("EntityCredential");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
